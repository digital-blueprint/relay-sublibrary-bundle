resources:
  Dbp\Relay\SublibraryBundle\ApiPlatform\Book:
    security: "is_granted('IS_AUTHENTICATED_FULLY') and is_granted('ROLE_LIBRARY_MANAGER')"
    types: ['http://schema.org/Book']
    description: "A book from the library"
    shortName: "LibraryBook"
    routePrefix: "/sublibrary"
    normalizationContext:
      groups: ["LibraryBook:output"]
      jsonld_embed_context: true

    operations:

      ApiPlatform\Metadata\GetCollection:
        security: "is_granted('IS_AUTHENTICATED_FULLY') and is_granted('ROLE_LIBRARY_MANAGER')"
        provider: Dbp\Relay\SublibraryBundle\ApiPlatform\BookProvider
        uriTemplate: "/books"
        openapiContext:
          tags: ["Sublibrary"]

      ApiPlatform\Metadata\Get:
        security: "is_granted('IS_AUTHENTICATED_FULLY') and is_granted('ROLE_LIBRARY_MANAGER')"
        provider: Dbp\Relay\SublibraryBundle\ApiPlatform\BookProvider
        uriTemplate: "/books/{identifier}"
        openapiContext:
          tags: ["Sublibrary"]

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      title:
        iri: "http://schema.org/name"
      isbn:
        iri: "http://schema.org/isbn"
      author:
        iri: "https://schema.org/author"
      publisher:
        iri: "https://schema.org/publisher"
      datePublished:
        iri: "https://schema.org/DateTime"

  Dbp\Relay\SublibraryBundle\Entity\Sublibrary:
    types: ['https://schema.org/Library']
    description: "Library of an Organization"
    shortName: "Sublibrary"
    routePrefix: "/sublibrary"
    normalizationContext:
      groups: ["Sublibrary:output"]
      jsonld_embed_context: true

    operations:

      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\SublibraryBundle\ApiPlatform\SublibraryProvider
        uriTemplate: "/sublibraries"
        openapiContext:
          tags: ["Sublibrary"]
          parameters:
            - name: libraryManager
              in: query
              description: 'Get the Sublibraries the given person has library manager permissions for (ID of BasePerson resource)'
              required: true
              type: "string"
              example: "woody007"
            - name: lang
              in: query
              description: 'Language of result'
              required: false
              type: "string"
              enum: ["de", "en"]
              example: "de"

      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\SublibraryBundle\ApiPlatform\SublibraryProvider
        uriTemplate: "/sublibraries/{identifier}"
        openapiContext:
          tags: ["Sublibrary"]
          parameters:
            - name: identifier
              in: path
              description: 'ID of Sublibrary'
              required: true
              type: "string"
              example: "1190"
            - name: lang
              in: query
              description: 'Language of result'
              required: false
              type: "string"
              enum: ["de", "en"]
              example: "de"

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      name:
        iri: "http://schema.org/name"
      code:
        iri: "http://schema.org/identifier"

  Dbp\Relay\SublibraryBundle\ApiPlatform\BudgetMonetaryAmount:
    security: "is_granted('IS_AUTHENTICATED_FULLY') and is_granted('ROLE_LIBRARY_MANAGER')"
    types: ['https://schema.org/MonetaryAmount']
    description: "A budget value of Sublibrary"
    shortName: "LibraryBudgetMonetaryAmount"
    routePrefix: "/sublibrary"
    normalizationContext:
      groups: ["LibraryBudgetMonetaryAmount:output"]
      jsonld_embed_context: true

    operations:

      ApiPlatform\Metadata\GetCollection:
        security: "is_granted('IS_AUTHENTICATED_FULLY') and is_granted('ROLE_LIBRARY_MANAGER')"
        provider: Dbp\Relay\SublibraryBundle\ApiPlatform\BudgetMonetaryAmountProvider
        uriTemplate: "/budget-monetary-amounts"
        openapiContext:
          tags: ["Sublibrary"]
          parameters:
            - name: sublibrary
              in: query
              description: 'Get all budget values of a sublibrary (ID of Sublibrary resource)'
              required: true
              type: "string"
              example: "1190"

      ApiPlatform\Metadata\Get:
        security: "is_granted('IS_AUTHENTICATED_FULLY') and is_granted('ROLE_LIBRARY_MANAGER')"
        provider: Dbp\Relay\SublibraryBundle\ApiPlatform\BudgetMonetaryAmountProvider
        uriTemplate: "/budget-monetary-amounts/{identifier}"
        openapiContext:
          tags: ["Sublibrary"]

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      value:
        iri: "http://schema.org/value"
      currency:
        iri: "http://schema.org/currency"

  Dbp\Relay\SublibraryBundle\ApiPlatform\EventStatusType:
    security: "is_granted('IS_AUTHENTICATED_FULLY') and is_granted('ROLE_LIBRARY_MANAGER')"
    types: ['https://schema.org/EventStatusType']
    description: "A event status type"
    shortName: "EventStatusType"
    routePrefix: "/sublibrary"
    normalizationContext:
      groups: ["LibraryBookOrder:output"]
      jsonld_embed_context: true

    operations:

      ApiPlatform\Metadata\Get:
        security: "is_granted('IS_AUTHENTICATED_FULLY') and is_granted('ROLE_LIBRARY_MANAGER')"
        provider: Dbp\Relay\SublibraryBundle\ApiPlatform\EventStatusTypeProvider
        uriTemplate: "/event-status-types/{identifier}"
        openapiContext:
          tags: ["Sublibrary"]

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      name:
        iri: "http://schema.org/name"
